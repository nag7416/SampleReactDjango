{"ast":null,"code":"const menbtn = document.querySelector('.menu button');\nconst overlay = document.querySelector('.hiddensidebar');\nconst hiddenclose = document.getElementById('hiddensidebarclose');\nconst overlayclose = document.getElementById('closebtn');\nif (menbtn) {\n  menbtn.addEventListener('click', function () {\n    overlay.classList.toggle('active');\n    hiddenclose.classList.toggle('active');\n    overlayclose.classList.toggle('active');\n  });\n}\nif (hiddenclose) {\n  hiddenclose.addEventListener('click', function () {\n    overlay.classList.toggle('active');\n    overlayclose.classList.toggle('active');\n    hiddenclose.classList.toggle('active');\n  });\n}\nif (overlayclose) {\n  overlayclose.addEventListener('click', function () {\n    overlay.classList.toggle('active');\n    overlayclose.classList.toggle('active');\n    hiddenclose.classList.toggle('active');\n  });\n}\nvar observer = new IntersectionObserver(function (entries, observer) {\n  entries.forEach(function (entry) {\n    if (entry.isIntersecting) {\n      var img = entry.target;\n\n      // Introduce a delay before loading the image\n      setTimeout(function () {\n        img.src = img.getAttribute('data-real-src');\n      }, 1000); // Delay of 1000 milliseconds (1 second)\n\n      observer.unobserve(img);\n    }\n  });\n}, {\n  root: null,\n  // Use the viewport as the root\n  rootMargin: '0px',\n  // No margin\n  threshold: 0.1 // 10% of the image visible triggers the loading\n});\n\n// Select all images on the site\nvar allImages = document.querySelectorAll('img');\n\n// Observe each image\nallImages.forEach(function (img) {\n  observer.observe(img);\n});\n\n// var btn = document.querySelector('.navbar .inner .left .menu #menu');\n//     var studioside = document.querySelector('.main .studioside');\n//     var studioscroll = document.querySelector('.main .studioscroll');\n//     btn.addEventListener('click', function(){\n//         studioside.classList.toggle('active');\n//         studioscroll.classList.toggle('active');\n//     })\n\n//     function updateClass() {\n//         const windowWidth = window.innerWidth;\n\n//         if (windowWidth < 900) { // Replace '600' with your desired width'\n//             studioside.classList.add('active');\n//             studioscroll.classList.add('active');\n//         }\n//         if (windowWidth > 900) { // Replace '600' with your desired width\n//             studioside.classList.remove('active');\n//             studioscroll.classList.remove('active');\n//         }\n//     }\n\n//     // Initial call to set the class based on window width\n//     updateClass();\n\n//     // Add an event listener to update the class when the window is resized\n//     window.addEventListener('resize', updateClass);","map":{"version":3,"names":["menbtn","document","querySelector","overlay","hiddenclose","getElementById","overlayclose","addEventListener","classList","toggle","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","img","target","setTimeout","src","getAttribute","unobserve","root","rootMargin","threshold","allImages","querySelectorAll","observe"],"sources":["C:/Users/babu7/OneDrive/Desktop/djangoyoutube/reelyoutube/frontend/src/assets/script.js"],"sourcesContent":["const menbtn = document.querySelector('.menu button');\r\nconst overlay = document.querySelector('.hiddensidebar');\r\nconst hiddenclose = document.getElementById('hiddensidebarclose');\r\nconst overlayclose = document.getElementById('closebtn');\r\n\r\nif(menbtn){\r\n\tmenbtn.addEventListener('click', function(){\r\n\t\toverlay.classList.toggle('active');\r\n\t\thiddenclose.classList.toggle('active');\r\n\t\toverlayclose.classList.toggle('active');\r\n\t})\r\n}\r\n\r\nif(hiddenclose){\r\n\thiddenclose.addEventListener('click', function(){\r\n\t\toverlay.classList.toggle('active');\r\n\t\toverlayclose.classList.toggle('active');\r\n\t\thiddenclose.classList.toggle('active');\r\n\t})\r\n}\r\nif(overlayclose){\r\n\toverlayclose.addEventListener('click', function(){\r\n\t\toverlay.classList.toggle('active');\r\n\t\toverlayclose.classList.toggle('active');\r\n\t\thiddenclose.classList.toggle('active');\r\n\t})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar observer = new IntersectionObserver(function(entries, observer) {\r\n    entries.forEach(function(entry) {\r\n        if (entry.isIntersecting) {\r\n            var img = entry.target;\r\n            \r\n            // Introduce a delay before loading the image\r\n            setTimeout(function() {\r\n                img.src = img.getAttribute('data-real-src');\r\n            }, 1000); // Delay of 1000 milliseconds (1 second)\r\n            \r\n            observer.unobserve(img);\r\n        }\r\n    });\r\n}, {\r\n    root: null, // Use the viewport as the root\r\n    rootMargin: '0px', // No margin\r\n    threshold: 0.1 // 10% of the image visible triggers the loading\r\n});\r\n\r\n// Select all images on the site\r\nvar allImages = document.querySelectorAll('img');\r\n\r\n// Observe each image\r\nallImages.forEach(function(img) {\r\n    observer.observe(img);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// var btn = document.querySelector('.navbar .inner .left .menu #menu');\r\n//     var studioside = document.querySelector('.main .studioside');\r\n//     var studioscroll = document.querySelector('.main .studioscroll');\r\n//     btn.addEventListener('click', function(){\r\n//         studioside.classList.toggle('active');\r\n//         studioscroll.classList.toggle('active');\r\n//     })\r\n\r\n\r\n//     function updateClass() {\r\n//         const windowWidth = window.innerWidth;\r\n\r\n\r\n//         if (windowWidth < 900) { // Replace '600' with your desired width'\r\n//             studioside.classList.add('active');\r\n//             studioscroll.classList.add('active');\r\n//         }\r\n//         if (windowWidth > 900) { // Replace '600' with your desired width\r\n//             studioside.classList.remove('active');\r\n//             studioscroll.classList.remove('active');\r\n//         }\r\n//     }\r\n\r\n//     // Initial call to set the class based on window width\r\n//     updateClass();\r\n\r\n//     // Add an event listener to update the class when the window is resized\r\n//     window.addEventListener('resize', updateClass);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,cAAc,CAAC;AACrD,MAAMC,OAAO,GAAGF,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;AACxD,MAAME,WAAW,GAAGH,QAAQ,CAACI,cAAc,CAAC,oBAAoB,CAAC;AACjE,MAAMC,YAAY,GAAGL,QAAQ,CAACI,cAAc,CAAC,UAAU,CAAC;AAExD,IAAGL,MAAM,EAAC;EACTA,MAAM,CAACO,gBAAgB,CAAC,OAAO,EAAE,YAAU;IAC1CJ,OAAO,CAACK,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IAClCL,WAAW,CAACI,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IACtCH,YAAY,CAACE,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;EACxC,CAAC,CAAC;AACH;AAEA,IAAGL,WAAW,EAAC;EACdA,WAAW,CAACG,gBAAgB,CAAC,OAAO,EAAE,YAAU;IAC/CJ,OAAO,CAACK,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IAClCH,YAAY,CAACE,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IACvCL,WAAW,CAACI,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;EACvC,CAAC,CAAC;AACH;AACA,IAAGH,YAAY,EAAC;EACfA,YAAY,CAACC,gBAAgB,CAAC,OAAO,EAAE,YAAU;IAChDJ,OAAO,CAACK,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IAClCH,YAAY,CAACE,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IACvCL,WAAW,CAACI,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;EACvC,CAAC,CAAC;AACH;AASA,IAAIC,QAAQ,GAAG,IAAIC,oBAAoB,CAAC,UAASC,OAAO,EAAEF,QAAQ,EAAE;EAChEE,OAAO,CAACC,OAAO,CAAC,UAASC,KAAK,EAAE;IAC5B,IAAIA,KAAK,CAACC,cAAc,EAAE;MACtB,IAAIC,GAAG,GAAGF,KAAK,CAACG,MAAM;;MAEtB;MACAC,UAAU,CAAC,YAAW;QAClBF,GAAG,CAACG,GAAG,GAAGH,GAAG,CAACI,YAAY,CAAC,eAAe,CAAC;MAC/C,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;MAEVV,QAAQ,CAACW,SAAS,CAACL,GAAG,CAAC;IAC3B;EACJ,CAAC,CAAC;AACN,CAAC,EAAE;EACCM,IAAI,EAAE,IAAI;EAAE;EACZC,UAAU,EAAE,KAAK;EAAE;EACnBC,SAAS,EAAE,GAAG,CAAC;AACnB,CAAC,CAAC;;AAEF;AACA,IAAIC,SAAS,GAAGxB,QAAQ,CAACyB,gBAAgB,CAAC,KAAK,CAAC;;AAEhD;AACAD,SAAS,CAACZ,OAAO,CAAC,UAASG,GAAG,EAAE;EAC5BN,QAAQ,CAACiB,OAAO,CAACX,GAAG,CAAC;AACzB,CAAC,CAAC;;AAiBF;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}