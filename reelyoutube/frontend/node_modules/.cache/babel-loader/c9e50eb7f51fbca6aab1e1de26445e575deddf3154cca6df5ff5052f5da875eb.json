{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\babu7\\\\OneDrive\\\\Desktop\\\\React\\\\frontend\\\\src\\\\components\\\\channel\\\\ChannelVideos.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport thumbnail from '../../assets/placeholder.jpg';\nimport { useParams } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { NavLink } from \"react-router-dom\";\nimport LoadingBar from 'react-top-loading-bar';\nimport Navbar from \"../Navbar\";\nimport Side from \"../Side\";\nimport Sidebar from \"../Sidebar\";\nimport ChannelLayer from \"./ChannelLayer\";\nimport ChannelButtons from \"./ChannelButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChannelVideos() {\n  _s();\n  const [userInfo, setUserInfo] = useState([]);\n  const [length, setLength] = useState(0);\n  const [videos, setVideos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [delayedLoading, setDelayedLoading] = useState(false);\n  const {\n    channelId\n  } = useParams();\n  useEffect(() => {\n    const videos_data = () => {\n      fetch('http://localhost:8000/api/user_videos', {\n        method: 'GET',\n        credentials: 'include'\n      }).then(response => {\n        if (response.status == 200) {\n          return response.json();\n        } else {\n          throw new Error('failed to fetch user videos..');\n        }\n      }).then(data => {\n        setIsLoading(false);\n        setTimeout(() => {\n          setDelayedLoading(true);\n        }, 1000);\n      }).catch(error => {\n        console.error('Error fetching user info:', error);\n      });\n    };\n    videos_data();\n    const apiurl = 'http://localhost:8000/api/get_user_data';\n    fetch(apiurl, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        throw new Error('Failed to fetch user info');\n      }\n    }).then(data => {\n      setUserInfo(data.user);\n    }).catch(error => {\n      console.error('Error fetching user info:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: ` - YouTube`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadingBar, {\n      color: \"#ff0000\" // Customize the color (e.g., red)\n      ,\n      height: 1.5 // Customize the height (4 pixels)\n      ,\n      progress: isLoading ? 30 : 100 // Set progress based on loading state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Side, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-scroll\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channelcon\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"banner\",\n            style: {\n              backgroundImage: `url(${userInfo.channelbanner})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"channel-outer\",\n            children: [/*#__PURE__*/_jsxDEV(ChannelLayer, {\n              userInfo: userInfo,\n              channelId: channelId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ChannelButtons, {\n              userInfo: userInfo,\n              channelId: channelId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChannelVideos, \"p301/5F63iV8+gtZ+u8yjNKUv4M=\", false, function () {\n  return [useParams];\n});\n_c = ChannelVideos;\nexport default ChannelVideos;\nvar _c;\n$RefreshReg$(_c, \"ChannelVideos\");","map":{"version":3,"names":["useState","useEffect","thumbnail","useParams","Helmet","NavLink","LoadingBar","Navbar","Side","Sidebar","ChannelLayer","ChannelButtons","jsxDEV","_jsxDEV","Fragment","_Fragment","ChannelVideos","_s","userInfo","setUserInfo","length","setLength","videos","setVideos","isLoading","setIsLoading","delayedLoading","setDelayedLoading","channelId","videos_data","fetch","method","credentials","then","response","status","json","Error","data","setTimeout","catch","error","console","apiurl","user","children","fileName","_jsxFileName","lineNumber","columnNumber","color","height","progress","className","style","backgroundImage","channelbanner","_c","$RefreshReg$"],"sources":["C:/Users/babu7/OneDrive/Desktop/React/frontend/src/components/channel/ChannelVideos.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport thumbnail from '../../assets/placeholder.jpg';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LoadingBar from 'react-top-loading-bar';\r\nimport Navbar from \"../Navbar\";\r\nimport Side from \"../Side\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport ChannelLayer from \"./ChannelLayer\";\r\nimport ChannelButtons from \"./ChannelButtons\";\r\n\r\nfunction ChannelVideos(){\r\n    const [userInfo, setUserInfo] = useState([]);\r\n    const [length, setLength] = useState(0);\r\n    const [videos, setVideos] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [delayedLoading, setDelayedLoading] = useState(false);\r\n    const { channelId } = useParams();\r\n\r\n    useEffect(() => {\r\n        const videos_data = () => {\r\n            fetch('http://localhost:8000/api/user_videos', {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if(response.status == 200){\r\n                    return response.json();\r\n                } else {\r\n                    throw new Error('failed to fetch user videos..');\r\n                }\r\n            })\r\n            .then(data => {\r\n                setIsLoading(false);\r\n                setTimeout(() => {\r\n                    setDelayedLoading(true);\r\n                }, 1000);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching user info:', error);\r\n            });\r\n        }\r\n        videos_data();\r\n\r\n        const apiurl = 'http://localhost:8000/api/get_user_data';\r\n        fetch(apiurl, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Failed to fetch user info');\r\n            }\r\n        })\r\n        .then(data => {\r\n            setUserInfo(data.user);\r\n            \r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching user info:', error);\r\n        });\r\n\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{` - YouTube`}</title>\r\n            </Helmet>\r\n            <LoadingBar\r\n                color=\"#ff0000\" // Customize the color (e.g., red)\r\n                height={1.5}       // Customize the height (4 pixels)\r\n                progress={isLoading ? 30 : 100} // Set progress based on loading state\r\n            />\r\n\r\n\r\n\r\n\r\n            <Navbar />\r\n            <div className=\"main\">\r\n                <Side />\r\n                <Sidebar />\r\n                <div className=\"main-scroll\">\r\n                    <div className=\"channelcon\">\r\n                        <div className=\"banner\" style={{backgroundImage: `url(${userInfo.channelbanner})`}}>\r\n                            \r\n                        </div>\r\n                        <div className=\"channel-outer\">\r\n                            <ChannelLayer userInfo={userInfo} channelId={channelId} />\r\n                            <ChannelButtons userInfo={userInfo} channelId={channelId} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default ChannelVideos;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}