{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _component = require('../component');\nvar _component2 = _interopRequireDefault(_component);\nvar _htmlTrackElement = require('../tracks/html-track-element');\nvar _htmlTrackElement2 = _interopRequireDefault(_htmlTrackElement);\nvar _htmlTrackElementList = require('../tracks/html-track-element-list');\nvar _htmlTrackElementList2 = _interopRequireDefault(_htmlTrackElementList);\nvar _mergeOptions = require('../utils/merge-options.js');\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\nvar _textTrack = require('../tracks/text-track');\nvar _textTrack2 = _interopRequireDefault(_textTrack);\nvar _textTrackList = require('../tracks/text-track-list');\nvar _textTrackList2 = _interopRequireDefault(_textTrackList);\nvar _videoTrackList = require('../tracks/video-track-list');\nvar _videoTrackList2 = _interopRequireDefault(_videoTrackList);\nvar _audioTrackList = require('../tracks/audio-track-list');\nvar _audioTrackList2 = _interopRequireDefault(_audioTrackList);\nvar _fn = require('../utils/fn.js');\nvar Fn = _interopRequireWildcard(_fn);\nvar _log = require('../utils/log.js');\nvar _log2 = _interopRequireDefault(_log);\nvar _timeRanges = require('../utils/time-ranges.js');\nvar _buffer = require('../utils/buffer.js');\nvar _mediaError = require('../media-error.js');\nvar _mediaError2 = _interopRequireDefault(_mediaError);\nvar _window = require('global/window');\nvar _window2 = _interopRequireDefault(_window);\nvar _document = require('global/document');\nvar _document2 = _interopRequireDefault(_document);\nvar _obj = require('../utils/obj');\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} /**\n   * @file tech.js\n   */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  var track = new _textTrack2['default'](options);\n  tracks.addTrack_(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  _inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    _classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = _possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    _this.textTracks_ = options.textTracks;\n    _this.videoTracks_ = options.videoTracks;\n    _this.audioTracks_ = options.audioTracks;\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n    if (options.nativeCaptions === false) {\n      _this.featuresNativeTextTracks = false;\n    }\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n    _this.autoRemoteTextTracks_ = new _textTrackList2['default']();\n    _this.initTextTrackListeners();\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(Fn.bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n  Tech.prototype.buffered = function buffered() {\n    return (0, _timeRanges.createTimeRange)(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n  Tech.prototype.bufferedPercent = function bufferedPercent() {\n    return (0, _buffer.bufferedPercent)(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n  Tech.prototype.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(['audio', 'video', 'text']);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this2 = this;\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this2[type + 'Tracks']() || [];\n      var i = list.length;\n      while (i--) {\n        var track = list[i];\n        if (type === 'text') {\n          _this2.removeRemoteTextTrack(track);\n        }\n        list.removeTrack_(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new _mediaError2['default'](err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return (0, _timeRanges.createTimeRange)(0, 0);\n    }\n    return (0, _timeRanges.createTimeRange)();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link TextTrackList} events. This adds\n   * {@link EventTarget~EventListeners} for `texttrackchange`, `addtrack` and\n   * `removetrack`.\n   *\n   * @fires Tech#texttrackchange\n   */\n\n  Tech.prototype.initTextTrackListeners = function initTextTrackListeners() {\n    var textTrackListChanges = Fn.bind(this, function () {\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n       *\n       * @event Tech#texttrackchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('texttrackchange');\n    });\n    var tracks = this.textTracks();\n    if (!tracks) {\n      return;\n    }\n    tracks.addEventListener('removetrack', textTrackListChanges);\n    tracks.addEventListener('addtrack', textTrackListChanges);\n    this.on('dispose', Fn.bind(this, function () {\n      tracks.removeEventListener('removetrack', textTrackListChanges);\n      tracks.removeEventListener('addtrack', textTrackListChanges);\n    }));\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList} and {@link {AudioTrackList} events.\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   */\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this3 = this;\n    var trackTypes = ['video', 'audio'];\n    trackTypes.forEach(function (type) {\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n       *\n       * @event Tech#audiotrackchange\n       * @type {EventTarget~Event}\n       */\n\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n       *\n       * @event Tech#videotrackchange\n       * @type {EventTarget~Event}\n       */\n      var trackListChanges = function trackListChanges() {\n        _this3.trigger(type + 'trackchange');\n      };\n      var tracks = _this3[type + 'Tracks']();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      _this3.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this4 = this;\n    if (_window2['default'].WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (_document2['default'].body.contains(this.el())) {\n      var vtt = require('videojs-vtt.js');\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && (0, _obj.isPlain)(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = _document2['default'].createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this4.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this4.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      _window2['default'].WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   * @method emulateTextTracks\n   */\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this5 = this;\n    var tracks = this.textTracks();\n    if (!tracks) {\n      return;\n    }\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack_(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack_(e.track);\n    };\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    var updateDisplay = function updateDisplay() {\n      return _this5.trigger('texttrackchange');\n    };\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Get the `Tech`s {@link VideoTrackList}.\n   *\n   * @return {VideoTrackList}\n   *          The video track list that the Tech is currently using.\n   */\n\n  Tech.prototype.videoTracks = function videoTracks() {\n    this.videoTracks_ = this.videoTracks_ || new _videoTrackList2['default']();\n    return this.videoTracks_;\n  };\n\n  /**\n   * Get the `Tech`s {@link AudioTrackList}.\n   *\n   * @return {AudioTrackList}\n   *          The audio track list that the Tech is currently using.\n   */\n\n  Tech.prototype.audioTracks = function audioTracks() {\n    this.audioTracks_ = this.audioTracks_ || new _audioTrackList2['default']();\n    return this.audioTracks_;\n  };\n\n  /**\n   * Get the `Tech`s {@link TextTrackList}.\n   *\n   * @return {TextTrackList}\n   *          The text track list that the Tech is currently using.\n   */\n\n  Tech.prototype.textTracks = function textTracks() {\n    this.textTracks_ = this.textTracks_ || new _textTrackList2['default']();\n    return this.textTracks_;\n  };\n\n  /**\n   * Get the `Tech`s remote {@link TextTrackList}, which is created from elements\n   * that were added to the DOM.\n   *\n   * @return {TextTrackList}\n   *          The remote text track list that the Tech is currently using.\n   */\n\n  Tech.prototype.remoteTextTracks = function remoteTextTracks() {\n    this.remoteTextTracks_ = this.remoteTextTracks_ || new _textTrackList2['default']();\n    return this.remoteTextTracks_;\n  };\n\n  /**\n   * Get The `Tech`s  {HTMLTrackElementList}, which are the elements in the DOM that are\n   * being used as TextTracks.\n   *\n   * @return {HTMLTrackElementList}\n   *          The current HTML track elements that exist for the tech.\n   */\n\n  Tech.prototype.remoteTextTrackEls = function remoteTextTrackEls() {\n    this.remoteTextTrackEls_ = this.remoteTextTrackEls_ || new _htmlTrackElementList2['default']();\n    return this.remoteTextTrackEls_;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = (0, _mergeOptions2['default'])(options, {\n      tech: this\n    });\n    return new _htmlTrackElement2['default'](track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      _log2['default'].warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack_(htmlTrackElement.track);\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.autoRemoteTextTracks_.addTrack_(htmlTrackElement.track);\n    }\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack_(track);\n    this.autoRemoteTextTracks_.removeTrack_(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n    Tech.techs_[name] = tech;\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        Name of the component to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n  Tech.getTech = function getTech(name) {\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    if (_window2['default'] && _window2['default'].videojs && _window2['default'].videojs[name]) {\n      _log2['default'].warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return _window2['default'].videojs[name];\n    }\n  };\n  return Tech;\n}(_component2['default']);\n\n/**\n * List of associated text tracks.\n *\n * @type {TextTrackList}\n * @private\n */\n\nTech.prototype.textTracks_; // eslint-disable-line\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n */\nTech.prototype.audioTracks_; // eslint-disable-line\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n */\nTech.prototype.videoTracks_; // eslint-disable-line\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating wether the `Tech` support fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   *\n   * @return {Tech}\n   *         Returns itself; this method is chainable\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        _log2['default'].error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n\n      // Catch if someone replaced the src without calling setSource.\n      // If they do, set currentSource_ to null and dispose our source handler.\n      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n      this.one(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n    return this;\n  };\n\n  /**\n   * Called once for the first loadstart of a video.\n   *\n   * @listens Tech#loadstart\n   */\n  _Tech.prototype.firstLoadStartListener_ = function () {\n    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n  };\n\n  // On successive loadstarts when setSource has not been called again\n  /**\n   * Called after the first loadstart for a video occurs.\n   *\n   * @listens Tech#loadstart\n   */\n  _Tech.prototype.successiveLoadStartListener_ = function () {\n    this.disposeSourceHandler();\n    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n_component2['default'].registerComponent('Tech', Tech);\n// Old name for Tech\n// @deprecated\n_component2['default'].registerComponent('MediaTechController', Tech);\nTech.registerTech('Tech', Tech);\nexports['default'] = Tech;","map":{"version":3,"names":["exports","__esModule","_component","require","_component2","_interopRequireDefault","_htmlTrackElement","_htmlTrackElement2","_htmlTrackElementList","_htmlTrackElementList2","_mergeOptions","_mergeOptions2","_textTrack","_textTrack2","_textTrackList","_textTrackList2","_videoTrackList","_videoTrackList2","_audioTrackList","_audioTrackList2","_fn","Fn","_interopRequireWildcard","_log","_log2","_timeRanges","_buffer","_mediaError","_mediaError2","_window","_window2","_document","_document2","_obj","obj","newObj","key","Object","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","createTrackHelper","kind","label","language","options","arguments","length","undefined","tracks","textTracks","tech","track","addTrack_","Tech","_Component","ready","reportTouchActivity","_this","hasStarted_","on","textTracks_","videoTracks_","videoTracks","audioTracks_","audioTracks","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","forEach","nativeCaptions","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTextTrackListeners","initTrackListeners","nativeControlsForTouch","emitTapEvents","name_","name","onDurationChange","manualProgress","one","trackProgress","manualProgressOff","stopTrackingProgress","off","event","progressInterval","setInterval","bind","numBufferedPercent","bufferedPercent","bufferedPercent_","trigger","duration_","duration","buffered","createTimeRange","clearInterval","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","type","target","manuallyTriggered","dispose","clearTracks","types","_this2","concat","list","i","removeRemoteTextTrack","removeTrack_","cleanupAutoTextTracks","reset","error","err","error_","played","setCurrentTime","textTrackListChanges","addEventListener","removeEventListener","_this3","trackTypes","trackListChanges","addWebVttScript_","_this4","WebVTT","body","contains","el","vtt","options_","isPlain","keys","script","createElement","src","onload","onerror","parentNode","appendChild","_this5","remoteTracks","remoteTextTracks","handleAddTrack","e","handleRemoveTrack","updateDisplay","textTracksChanges","mode","remoteTextTracks_","remoteTextTrackEls","remoteTextTrackEls_","addTextTrack","Error","createRemoteTextTrack","addRemoteTextTrack","manualCleanup","htmlTrackElement","warn","addTrackElement_","trackElement","getTrackElementByTrack_","removeTrackElement_","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","canPlayType","isTech","component","registerTech","techs_","getTech","videojs","featuresVolumeControl","featuresFullscreenResize","featuresPlaybackRate","withSourceHandlers","_Tech","registerSourceHandler","handler","index","handlers","sourceHandlers","splice","can","selectSourceHandler","source","canHandleSource","canPlaySource","srcObj","sh","deferrable","fnName","originalFn","sourceHandler_","apply","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","el_","firstLoadStartListener_","successiveLoadStartListener_","handleSource","registerComponent"],"sources":["C:/Users/babu7/OneDrive/Desktop/djangoyoutube2/reelyoutube/frontend/node_modules/videojs-react/node_modules/video.js/es5/tech/tech.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _htmlTrackElement = require('../tracks/html-track-element');\n\nvar _htmlTrackElement2 = _interopRequireDefault(_htmlTrackElement);\n\nvar _htmlTrackElementList = require('../tracks/html-track-element-list');\n\nvar _htmlTrackElementList2 = _interopRequireDefault(_htmlTrackElementList);\n\nvar _mergeOptions = require('../utils/merge-options.js');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _textTrack = require('../tracks/text-track');\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nvar _textTrackList = require('../tracks/text-track-list');\n\nvar _textTrackList2 = _interopRequireDefault(_textTrackList);\n\nvar _videoTrackList = require('../tracks/video-track-list');\n\nvar _videoTrackList2 = _interopRequireDefault(_videoTrackList);\n\nvar _audioTrackList = require('../tracks/audio-track-list');\n\nvar _audioTrackList2 = _interopRequireDefault(_audioTrackList);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _log = require('../utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _timeRanges = require('../utils/time-ranges.js');\n\nvar _buffer = require('../utils/buffer.js');\n\nvar _mediaError = require('../media-error.js');\n\nvar _mediaError2 = _interopRequireDefault(_mediaError);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _obj = require('../utils/obj');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file tech.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new _textTrack2['default'](options);\n\n  tracks.addTrack_(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  _inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n    _classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = _possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    _this.textTracks_ = options.textTracks;\n    _this.videoTracks_ = options.videoTracks;\n    _this.audioTracks_ = options.audioTracks;\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false) {\n      _this.featuresNativeTextTracks = false;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new _textTrackList2['default']();\n\n    _this.initTextTrackListeners();\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(Fn.bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return (0, _timeRanges.createTimeRange)(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent() {\n    return (0, _buffer.bufferedPercent)(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(['audio', 'video', 'text']);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this2 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this2[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this2.removeRemoteTextTrack(track);\n        }\n        list.removeTrack_(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new _mediaError2['default'](err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return (0, _timeRanges.createTimeRange)(0, 0);\n    }\n    return (0, _timeRanges.createTimeRange)();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link TextTrackList} events. This adds\n   * {@link EventTarget~EventListeners} for `texttrackchange`, `addtrack` and\n   * `removetrack`.\n   *\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTextTrackListeners = function initTextTrackListeners() {\n    var textTrackListChanges = Fn.bind(this, function () {\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n       *\n       * @event Tech#texttrackchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('texttrackchange');\n    });\n\n    var tracks = this.textTracks();\n\n    if (!tracks) {\n      return;\n    }\n\n    tracks.addEventListener('removetrack', textTrackListChanges);\n    tracks.addEventListener('addtrack', textTrackListChanges);\n\n    this.on('dispose', Fn.bind(this, function () {\n      tracks.removeEventListener('removetrack', textTrackListChanges);\n      tracks.removeEventListener('addtrack', textTrackListChanges);\n    }));\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList} and {@link {AudioTrackList} events.\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this3 = this;\n\n    var trackTypes = ['video', 'audio'];\n\n    trackTypes.forEach(function (type) {\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n       *\n       * @event Tech#audiotrackchange\n       * @type {EventTarget~Event}\n       */\n\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n       *\n       * @event Tech#videotrackchange\n       * @type {EventTarget~Event}\n       */\n      var trackListChanges = function trackListChanges() {\n        _this3.trigger(type + 'trackchange');\n      };\n\n      var tracks = _this3[type + 'Tracks']();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this3.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this4 = this;\n\n    if (_window2['default'].WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (_document2['default'].body.contains(this.el())) {\n      var vtt = require('videojs-vtt.js');\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && (0, _obj.isPlain)(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = _document2['default'].createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this4.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this4.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      _window2['default'].WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   * @method emulateTextTracks\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this5 = this;\n\n    var tracks = this.textTracks();\n\n    if (!tracks) {\n      return;\n    }\n\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack_(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack_(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this5.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Get the `Tech`s {@link VideoTrackList}.\n   *\n   * @return {VideoTrackList}\n   *          The video track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.videoTracks = function videoTracks() {\n    this.videoTracks_ = this.videoTracks_ || new _videoTrackList2['default']();\n    return this.videoTracks_;\n  };\n\n  /**\n   * Get the `Tech`s {@link AudioTrackList}.\n   *\n   * @return {AudioTrackList}\n   *          The audio track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.audioTracks = function audioTracks() {\n    this.audioTracks_ = this.audioTracks_ || new _audioTrackList2['default']();\n    return this.audioTracks_;\n  };\n\n  /**\n   * Get the `Tech`s {@link TextTrackList}.\n   *\n   * @return {TextTrackList}\n   *          The text track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.textTracks = function textTracks() {\n    this.textTracks_ = this.textTracks_ || new _textTrackList2['default']();\n    return this.textTracks_;\n  };\n\n  /**\n   * Get the `Tech`s remote {@link TextTrackList}, which is created from elements\n   * that were added to the DOM.\n   *\n   * @return {TextTrackList}\n   *          The remote text track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.remoteTextTracks = function remoteTextTracks() {\n    this.remoteTextTracks_ = this.remoteTextTracks_ || new _textTrackList2['default']();\n    return this.remoteTextTracks_;\n  };\n\n  /**\n   * Get The `Tech`s  {HTMLTrackElementList}, which are the elements in the DOM that are\n   * being used as TextTracks.\n   *\n   * @return {HTMLTrackElementList}\n   *          The current HTML track elements that exist for the tech.\n   */\n\n\n  Tech.prototype.remoteTextTrackEls = function remoteTextTrackEls() {\n    this.remoteTextTrackEls_ = this.remoteTextTrackEls_ || new _htmlTrackElementList2['default']();\n    return this.remoteTextTrackEls_;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = (0, _mergeOptions2['default'])(options, {\n      tech: this\n    });\n\n    return new _htmlTrackElement2['default'](track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      _log2['default'].warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack_(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.autoRemoteTextTracks_.addTrack_(htmlTrackElement.track);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack_(track);\n    this.autoRemoteTextTracks_.removeTrack_(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    Tech.techs_[name] = tech;\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        Name of the component to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (_window2['default'] && _window2['default'].videojs && _window2['default'].videojs[name]) {\n      _log2['default'].warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return _window2['default'].videojs[name];\n    }\n  };\n\n  return Tech;\n}(_component2['default']);\n\n/**\n * List of associated text tracks.\n *\n * @type {TextTrackList}\n * @private\n */\n\n\nTech.prototype.textTracks_; // eslint-disable-line\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n */\nTech.prototype.audioTracks_; // eslint-disable-line\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n */\nTech.prototype.videoTracks_; // eslint-disable-line\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating wether the `Tech` support fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   *\n   * @return {Tech}\n   *         Returns itself; this method is chainable\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        _log2['default'].error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n\n      // Catch if someone replaced the src without calling setSource.\n      // If they do, set currentSource_ to null and dispose our source handler.\n      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n      this.one(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n\n    return this;\n  };\n\n  /**\n   * Called once for the first loadstart of a video.\n   *\n   * @listens Tech#loadstart\n   */\n  _Tech.prototype.firstLoadStartListener_ = function () {\n    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n  };\n\n  // On successive loadstarts when setSource has not been called again\n  /**\n   * Called after the first loadstart for a video occurs.\n   *\n   * @listens Tech#loadstart\n   */\n  _Tech.prototype.successiveLoadStartListener_ = function () {\n    this.disposeSourceHandler();\n    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n_component2['default'].registerComponent('Tech', Tech);\n// Old name for Tech\n// @deprecated\n_component2['default'].registerComponent('MediaTechController', Tech);\nTech.registerTech('Tech', Tech);\nexports['default'] = Tech;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}