{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\babu7\\\\OneDrive\\\\Desktop\\\\React\\\\frontend\\\\src\\\\components\\\\channel\\\\Channel.js\",\n  _s = $RefreshSig$();\nimport { Helmet } from \"react-helmet\";\nimport Navbar from \"../Navbar\";\nimport Side from \"../Side\";\nimport Sidebar from \"../Sidebar\";\nimport { useState, useEffect } from \"react\";\nimport { NavLink, Outlet, useParams, useLocation, Routes, Route } from \"react-router-dom\";\nimport ChannelHome from \"./ChannelHome\";\nimport ChannelVideos from './ChannelVideos';\nimport author from '../../assets/author.png';\nimport ChannelAbout from \"./ChannelAbout\";\nimport LoadingBar from \"react-top-loading-bar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Channel() {\n  _s();\n  const [totalview, setTotalview] = useState(0);\n  const [userInfo, setUserInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [videos, setVideos] = useState([]);\n  const [featured, setFeatured] = useState([]);\n  const [length, setLength] = useState([]);\n  const {\n    channelId\n  } = useParams();\n  const location = useLocation();\n  const isChannelHome = location.pathname === `/channel/${channelId}`;\n  const isChannelVideos = location.pathname === `/channel/${channelId}/videos`;\n  const isChannelAbout = location.pathname === `/channel/${channelId}/about`;\n  useEffect(() => {\n    const apiurl = 'http://localhost:8000/api/get_user_data';\n    fetch(apiurl, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        throw new Error('Failed to fetch user info');\n      }\n    }).then(data => {\n      setTotalview(data.total_views);\n      setUserInfo(data.user);\n    }).catch(error => {\n      console.error('Error fetching user info:', error);\n    });\n    fetch('http://localhost:8000/api/featured_video', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(response => {\n      if (response.status == 200) {\n        return response.json();\n      } else {\n        throw new Error('failed to fetch featured videos..');\n      }\n    }).then(data => {\n      setFeatured(data[0]);\n    }).catch(error => {\n      console.error('Error fetching user info:', error);\n    });\n    const videos_data = () => {\n      fetch('http://localhost:8000/api/user_videos', {\n        method: 'GET',\n        credentials: 'include'\n      }).then(response => {\n        if (response.status == 200) {\n          return response.json();\n        } else {\n          throw new Error('failed to fetch user videos..');\n        }\n      }).then(data => {\n        setLength(data.videos_count);\n        setVideos(data.videos);\n      }).catch(error => {\n        console.error('Error fetching user info:', error);\n      });\n    };\n    videos_data();\n    if (location) {\n      videos_data();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Side, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-scroll\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channelcon\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"banner\",\n            style: {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"channel-outer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Channel, \"/++7KXrNGNm19RJq76Nz/aA+O+M=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Channel;\nexport default Channel;\nvar _c;\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"names":["Helmet","Navbar","Side","Sidebar","useState","useEffect","NavLink","Outlet","useParams","useLocation","Routes","Route","ChannelHome","ChannelVideos","author","ChannelAbout","LoadingBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Channel","_s","totalview","setTotalview","userInfo","setUserInfo","isLoading","setIsLoading","videos","setVideos","featured","setFeatured","length","setLength","channelId","location","isChannelHome","pathname","isChannelVideos","isChannelAbout","apiurl","fetch","method","credentials","then","response","status","json","Error","data","total_views","user","catch","error","console","videos_data","videos_count","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","_c","$RefreshReg$"],"sources":["C:/Users/babu7/OneDrive/Desktop/React/frontend/src/components/channel/Channel.js"],"sourcesContent":["import { Helmet } from \"react-helmet\";\r\nimport Navbar from \"../Navbar\";\r\nimport Side from \"../Side\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink, Outlet, useParams, useLocation, Routes, Route } from \"react-router-dom\";\r\nimport ChannelHome from \"./ChannelHome\";\r\nimport ChannelVideos from './ChannelVideos';\r\nimport author from '../../assets/author.png';\r\nimport ChannelAbout from \"./ChannelAbout\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\n\r\nfunction Channel(){\r\n    const [totalview, setTotalview] = useState(0);\r\n    const [userInfo, setUserInfo] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [videos, setVideos] = useState([]);\r\n    const [featured, setFeatured] = useState([]);\r\n    const [length, setLength] = useState([]);\r\n    const { channelId } = useParams();\r\n    const location = useLocation();\r\n    const isChannelHome = location.pathname === `/channel/${channelId}`;\r\n    const isChannelVideos = location.pathname === `/channel/${channelId}/videos`;\r\n    const isChannelAbout = location.pathname === `/channel/${channelId}/about`;\r\n    \r\n\r\n    useEffect(() => {       \r\n\r\n        const apiurl = 'http://localhost:8000/api/get_user_data';\r\n\r\n        fetch(apiurl, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Failed to fetch user info');\r\n            }\r\n        })\r\n        .then(data => {\r\n            setTotalview(data.total_views);\r\n            setUserInfo(data.user);\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching user info:', error);\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n        fetch('http://localhost:8000/api/featured_video', {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if(response.status == 200){\r\n                    return response.json();\r\n                } else {\r\n                    throw new Error('failed to fetch featured videos..');\r\n                }\r\n            })\r\n            .then(data => {\r\n                setFeatured(data[0]);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching user info:', error);\r\n            });\r\n\r\n\r\n        const videos_data = () => {\r\n            fetch('http://localhost:8000/api/user_videos', {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if(response.status == 200){\r\n                    return response.json();\r\n                } else {\r\n                    throw new Error('failed to fetch user videos..');\r\n                }\r\n            })\r\n            .then(data => {\r\n                setLength(data.videos_count);\r\n                setVideos(data.videos);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching user info:', error);\r\n            });\r\n        }\r\n        videos_data();\r\n\r\n        if(location){\r\n            videos_data();\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title></title>\r\n            </Helmet>\r\n\r\n            <Navbar />\r\n            <div className=\"main\">\r\n                <Side />\r\n                <Sidebar />\r\n                <div className=\"main-scroll\">\r\n                    <div className=\"channelcon\">\r\n                        <div className=\"banner\" style={{}}>\r\n                            \r\n                        </div>\r\n                        <div className=\"channel-outer\">\r\n                            \r\n                            \r\n\r\n                    \r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Channel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}