{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\babu7\\\\OneDrive\\\\Desktop\\\\React\\\\frontend\\\\src\\\\pages\\\\LazyImage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyImage = ({\n  src,\n  'data-real-src': realSrc,\n  alt\n}) => {\n  _s();\n  const imgRef = useRef(null);\n  const [shouldLoad, setShouldLoad] = useState(false);\n  const randomDelay = Math.floor(Math.random() * 2000) + 500; // Random delay between 1 to 3 seconds (1000ms = 1s)\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && imgRef.current && !shouldLoad) {\n          setTimeout(() => {\n            if (imgRef.current) {\n              setShouldLoad(true); // Trigger the image load after the random delay\n              observer.unobserve(imgRef.current);\n            }\n          }, randomDelay);\n        }\n      });\n    });\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n    return () => {\n      if (imgRef.current) {\n        observer.unobserve(imgRef.current);\n      }\n    };\n  }, [randomDelay, shouldLoad]);\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    ref: imgRef,\n    src: shouldLoad ? realSrc : src,\n    alt: alt\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n_s(LazyImage, \"7+YKEhujADYljgSVgZguxyNb7Lc=\");\n_c = LazyImage;\nexport default LazyImage;\nvar _c;\n$RefreshReg$(_c, \"LazyImage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","LazyImage","src","realSrc","alt","_s","imgRef","shouldLoad","setShouldLoad","randomDelay","Math","floor","random","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","setTimeout","unobserve","observe","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/babu7/OneDrive/Desktop/React/frontend/src/pages/LazyImage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst LazyImage = ({ src, 'data-real-src': realSrc, alt }) => {\r\n  const imgRef = useRef(null);\r\n  const [shouldLoad, setShouldLoad] = useState(false);\r\n  const randomDelay = Math.floor(Math.random() * 2000) + 500; // Random delay between 1 to 3 seconds (1000ms = 1s)\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting && imgRef.current && !shouldLoad) {\r\n          setTimeout(() => {\r\n            if (imgRef.current) {\r\n              setShouldLoad(true); // Trigger the image load after the random delay\r\n              observer.unobserve(imgRef.current);\r\n            }\r\n          }, randomDelay);\r\n        }\r\n      });\r\n    });\r\n\r\n    if (imgRef.current) {\r\n      observer.observe(imgRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (imgRef.current) {\r\n        observer.unobserve(imgRef.current);\r\n      }\r\n    };\r\n  }, [randomDelay, shouldLoad]);\r\n\r\n  return <img ref={imgRef} src={shouldLoad ? realSrc : src} alt={alt} />;\r\n};\r\n\r\nexport default LazyImage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,SAAS,GAAGA,CAAC;EAAEC,GAAG;EAAE,eAAe,EAAEC,OAAO;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAMC,MAAM,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMW,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;;EAE5DhB,SAAS,CAAC,MAAM;IACd,MAAMiB,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MACrDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,IAAIZ,MAAM,CAACa,OAAO,IAAI,CAACZ,UAAU,EAAE;UACzDa,UAAU,CAAC,MAAM;YACf,IAAId,MAAM,CAACa,OAAO,EAAE;cAClBX,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;cACrBK,QAAQ,CAACQ,SAAS,CAACf,MAAM,CAACa,OAAO,CAAC;YACpC;UACF,CAAC,EAAEV,WAAW,CAAC;QACjB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAIH,MAAM,CAACa,OAAO,EAAE;MAClBN,QAAQ,CAACS,OAAO,CAAChB,MAAM,CAACa,OAAO,CAAC;IAClC;IAEA,OAAO,MAAM;MACX,IAAIb,MAAM,CAACa,OAAO,EAAE;QAClBN,QAAQ,CAACQ,SAAS,CAACf,MAAM,CAACa,OAAO,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,CAACV,WAAW,EAAEF,UAAU,CAAC,CAAC;EAE7B,oBAAOP,OAAA;IAAKuB,GAAG,EAAEjB,MAAO;IAACJ,GAAG,EAAEK,UAAU,GAAGJ,OAAO,GAAGD,GAAI;IAACE,GAAG,EAAEA;EAAI;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxE,CAAC;AAACtB,EAAA,CA/BIJ,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}