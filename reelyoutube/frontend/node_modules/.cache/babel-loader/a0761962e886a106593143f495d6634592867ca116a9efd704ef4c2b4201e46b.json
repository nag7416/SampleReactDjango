{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\babu7\\\\OneDrive\\\\Desktop\\\\djangoyoutube2\\\\reelyoutube\\\\frontend\\\\src\\\\components\\\\channel\\\\ChannelPlaylists.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport thumbnail from '../../assets/placeholder.jpg';\nimport { useParams } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport Navbar from \"../Navbar\";\nimport Side from \"../Side\";\nimport Sidebar from \"../Sidebar\";\nimport LoadingBar from \"react-top-loading-bar\";\nimport Channel from \"./Channel\";\nimport { NavLink } from \"react-router-dom\";\nimport LazyImage from \"../../pages/LazyImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChannelPlaylists({\n  userInfo,\n  subdata\n}) {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [requestuserinfo, setRequestUserInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    channelslug\n  } = useParams();\n  const channelslu = channelslug.replace('@', '');\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/user_channel_json/${channelslu}`, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        throw new Error('Failed to fetch user info');\n      }\n    }).then(data => {\n      setIsLoading(false);\n      setVideos(data.videos);\n    }).catch(error => {\n      console.error('Error fetching user info:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LoadingBar, {\n      color: \"#ff0000\" // Customize the color (e.g., red)\n      ,\n      height: 1.5 // Customize the height (4 pixels)\n      ,\n      progress: isLoading ? 30 : 100 // Set progress based on loading state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channelvideoscon\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Playlists (0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(ChannelPlaylists, \"1NbSqYMgZXf5xsqL/1AbK0TkzuI=\", false, function () {\n  return [useParams];\n});\n_c = ChannelPlaylists;\nexport default ChannelPlaylists;\nvar _c;\n$RefreshReg$(_c, \"ChannelPlaylists\");","map":{"version":3,"names":["useState","useEffect","thumbnail","useParams","Helmet","Navbar","Side","Sidebar","LoadingBar","Channel","NavLink","LazyImage","jsxDEV","_jsxDEV","Fragment","_Fragment","ChannelPlaylists","userInfo","subdata","_s","videos","setVideos","requestuserinfo","setRequestUserInfo","isLoading","setIsLoading","channelslug","channelslu","replace","fetch","method","credentials","then","response","status","json","Error","data","catch","error","console","children","color","height","progress","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/babu7/OneDrive/Desktop/djangoyoutube2/reelyoutube/frontend/src/components/channel/ChannelPlaylists.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport thumbnail from '../../assets/placeholder.jpg'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Navbar from \"../Navbar\";\r\nimport Side from \"../Side\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport Channel from \"./Channel\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LazyImage from \"../../pages/LazyImage\";\r\n\r\nfunction ChannelPlaylists({ userInfo, subdata }){\r\n    const [videos, setVideos] = useState([]);\r\n    const [requestuserinfo, setRequestUserInfo] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    \r\n    const { channelslug } = useParams();\r\n\r\n    const channelslu = channelslug.replace('@', '');\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8000/api/user_channel_json/${channelslu}`, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                \r\n                return response.json();\r\n            } else {\r\n                throw new Error('Failed to fetch user info');\r\n            }\r\n        })\r\n        .then(data => {\r\n            setIsLoading(false);\r\n            setVideos(data.videos);\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching user info:', error);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <LoadingBar\r\n                color=\"#ff0000\" // Customize the color (e.g., red)\r\n                height={1.5}       // Customize the height (4 pixels)\r\n                progress={isLoading ? 30 : 100} // Set progress based on loading state\r\n            />\r\n\r\n\r\n                <div className=\"channelvideoscon\">\r\n                    <h4>Playlists (0)</h4>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\nexport default ChannelPlaylists;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,8BAA8B;AACpD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,cAAc;AACrC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,SAASC,gBAAgBA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAM;IAAE0B;EAAY,CAAC,GAAGvB,SAAS,CAAC,CAAC;EAEnC,MAAMwB,UAAU,GAAGD,WAAW,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;EAG/C3B,SAAS,CAAC,MAAM;IACZ4B,KAAK,CAAE,+CAA8CF,UAAW,EAAC,EAAE;MAC/DG,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE;IACjB,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAEzB,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC1B,CAAC,MAAM;QACH,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;IACJ,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVZ,YAAY,CAAC,KAAK,CAAC;MACnBJ,SAAS,CAACgB,IAAI,CAACjB,MAAM,CAAC;IAC1B,CAAC,CAAC,CACDkB,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGN,oBACI1B,OAAA,CAAAE,SAAA;IAAA0B,QAAA,gBACI5B,OAAA,CAACL,UAAU;MACPkC,KAAK,EAAC,SAAS,CAAC;MAAA;MAChBC,MAAM,EAAE,GAAI,CAAO;MAAA;MACnBC,QAAQ,EAAEpB,SAAS,GAAG,EAAE,GAAG,GAAI,CAAC;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAGEnC,OAAA;MAAKoC,SAAS,EAAC,kBAAkB;MAAAR,QAAA,eAC7B5B,OAAA;QAAA4B,QAAA,EAAI;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA,eACZ,CAAC;AAEX;AAAC7B,EAAA,CA/CQH,gBAAgB;EAAA,QAKGb,SAAS;AAAA;AAAA+C,EAAA,GAL5BlC,gBAAgB;AAgDzB,eAAeA,gBAAgB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}