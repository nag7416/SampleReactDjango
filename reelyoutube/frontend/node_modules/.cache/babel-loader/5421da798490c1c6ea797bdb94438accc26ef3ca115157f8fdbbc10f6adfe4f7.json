{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _button = require('../button');\nvar _button2 = _interopRequireDefault(_button);\nvar _component = require('../component');\nvar _component2 = _interopRequireDefault(_component);\nvar _dom = require('../utils/dom.js');\nvar Dom = _interopRequireWildcard(_dom);\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} /**\n   * @file mute-toggle.js\n   */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nvar MuteToggle = function (_Button) {\n  _inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    _classCallCheck(this, MuteToggle);\n    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n    _this.on(player, 'volumechange', _this.update);\n\n    // hide mute toggle if the current tech doesn't support volume control\n    if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n      _this.addClass('vjs-hidden');\n    }\n    _this.on(player, 'loadstart', function () {\n      // We need to update the button to account for a default muted state.\n      this.update();\n      if (player.tech_.featuresVolumeControl === false) {\n        this.addClass('vjs-hidden');\n      } else {\n        this.removeClass('vjs-hidden');\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    this.player_.muted(this.player_.muted() ? false : true);\n  };\n\n  /**\n   * Update the state of volume.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called through an\n   *        event.\n   *\n   * @listens Player#loadstart\n   */\n\n  MuteToggle.prototype.update = function update(event) {\n    var vol = this.player_.volume();\n    var level = 3;\n    if (this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // Don't rewrite the button text if the actual text doesn't change.\n    // This causes unnecessary and confusing information for screen reader users.\n    // This check is needed because this function gets called every time the volume level is changed.\n    var toMute = this.player_.muted() ? 'Unmute' : 'Mute';\n    if (this.controlText() !== toMute) {\n      this.controlText(toMute);\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      Dom.removeElClass(this.el_, 'vjs-vol-' + i);\n    }\n    Dom.addElClass(this.el_, 'vjs-vol-' + level);\n  };\n  return MuteToggle;\n}(_button2['default']);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nMuteToggle.prototype.controlText_ = 'Mute';\n_component2['default'].registerComponent('MuteToggle', MuteToggle);\nexports['default'] = MuteToggle;","map":{"version":3,"names":["exports","__esModule","_button","require","_button2","_interopRequireDefault","_component","_component2","_dom","Dom","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","MuteToggle","_Button","player","options","_this","on","update","tech_","featuresVolumeControl","addClass","removeClass","buildCSSClass","handleClick","event","player_","muted","vol","volume","level","toMute","controlText","i","removeElClass","el_","addElClass","controlText_","registerComponent"],"sources":["C:/Users/babu7/OneDrive/Desktop/djangoyoutube2/reelyoutube/frontend/node_modules/videojs-react/node_modules/video.js/es5/control-bar/mute-toggle.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('../button');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _dom = require('../utils/dom.js');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file mute-toggle.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nvar MuteToggle = function (_Button) {\n  _inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    _classCallCheck(this, MuteToggle);\n\n    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'volumechange', _this.update);\n\n    // hide mute toggle if the current tech doesn't support volume control\n    if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n      _this.addClass('vjs-hidden');\n    }\n\n    _this.on(player, 'loadstart', function () {\n      // We need to update the button to account for a default muted state.\n      this.update();\n\n      if (player.tech_.featuresVolumeControl === false) {\n        this.addClass('vjs-hidden');\n      } else {\n        this.removeClass('vjs-hidden');\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    this.player_.muted(this.player_.muted() ? false : true);\n  };\n\n  /**\n   * Update the state of volume.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called through an\n   *        event.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    if (this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // Don't rewrite the button text if the actual text doesn't change.\n    // This causes unnecessary and confusing information for screen reader users.\n    // This check is needed because this function gets called every time the volume level is changed.\n    var toMute = this.player_.muted() ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== toMute) {\n      this.controlText(toMute);\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      Dom.removeElClass(this.el_, 'vjs-vol-' + i);\n    }\n    Dom.addElClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  return MuteToggle;\n}(_button2['default']);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\n_component2['default'].registerComponent('MuteToggle', MuteToggle);\nexports['default'] = MuteToggle;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}