{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n/**\n * @file format-time.js\n * @module Format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n * will force a number of leading zeros to cover the length of the guide.\n *\n * @param {number} seconds\n *        Number of seconds to be turned into a string\n *\n * @param {number} guide\n *        Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}\nexports['default'] = formatTime;","map":{"version":3,"names":["exports","__esModule","formatTime","seconds","guide","arguments","length","undefined","s","Math","floor","m","h","gm","gh","isNaN","Infinity"],"sources":["C:/Users/babu7/OneDrive/Desktop/djangoyoutube2/reelyoutube/frontend/node_modules/videojs-react/node_modules/video.js/es5/utils/format-time.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n/**\n * @file format-time.js\n * @module Format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n * will force a number of leading zeros to cover the length of the guide.\n *\n * @param {number} seconds\n *        Number of seconds to be turned into a string\n *\n * @param {number} guide\n *        Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n}\n\nexports['default'] = formatTime;\n"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,OAAO,EAAE;EAC3B,IAAIC,KAAK,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGF,OAAO;EAEvFA,OAAO,GAAGA,OAAO,GAAG,CAAC,GAAG,CAAC,GAAGA,OAAO;EACnC,IAAIK,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACP,OAAO,GAAG,EAAE,CAAC;EAChC,IAAIQ,CAAC,GAAGF,IAAI,CAACC,KAAK,CAACP,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC;EACrC,IAAIS,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACP,OAAO,GAAG,IAAI,CAAC;EAClC,IAAIU,EAAE,GAAGJ,IAAI,CAACC,KAAK,CAACN,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;EACpC,IAAIU,EAAE,GAAGL,IAAI,CAACC,KAAK,CAACN,KAAK,GAAG,IAAI,CAAC;;EAEjC;EACA,IAAIW,KAAK,CAACZ,OAAO,CAAC,IAAIA,OAAO,KAAKa,QAAQ,EAAE;IAC1C;IACA;IACAJ,CAAC,GAAGD,CAAC,GAAGH,CAAC,GAAG,GAAG;EACjB;;EAEA;EACAI,CAAC,GAAGA,CAAC,GAAG,CAAC,IAAIE,EAAE,GAAG,CAAC,GAAGF,CAAC,GAAG,GAAG,GAAG,EAAE;;EAElC;EACA;EACAD,CAAC,GAAG,CAAC,CAACC,CAAC,IAAIC,EAAE,IAAI,EAAE,KAAKF,CAAC,GAAG,EAAE,GAAG,GAAG,GAAGA,CAAC,GAAGA,CAAC,IAAI,GAAG;;EAEnD;EACAH,CAAC,GAAGA,CAAC,GAAG,EAAE,GAAG,GAAG,GAAGA,CAAC,GAAGA,CAAC;EAExB,OAAOI,CAAC,GAAGD,CAAC,GAAGH,CAAC;AAClB;AAEAR,OAAO,CAAC,SAAS,CAAC,GAAGE,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}