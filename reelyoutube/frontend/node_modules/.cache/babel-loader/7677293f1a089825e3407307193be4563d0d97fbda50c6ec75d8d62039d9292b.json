{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\babu7\\\\OneDrive\\\\Desktop\\\\djangoyoutube2\\\\reelyoutube\\\\frontend\\\\src\\\\components\\\\studio\\\\StudioAnalytics.js\",\n  _s = $RefreshSig$();\nimport StudioNav from \"./studioComps/StudioNav\";\nimport StudioSidebar from \"./studioComps/StudioSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StudioAnalytics({\n  userInfo\n}) {\n  _s();\n  const {\n    channelslug\n  } = useParams();\n  const channelslu = channelslug.replace('@', '');\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/user_channel_json/${channelslu}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (response.status === 200) {\n          const data = await response.json();\n          setIsLoading(false);\n          setrequestUserInfo(data);\n          setVideos(data.admin_videos);\n        } else {\n          throw new Error('Failed to fetch user info');\n        }\n      } catch (error) {\n        setIsLoading(true);\n        console.error('Error fetching user info:', error);\n      }\n    };\n    fetchUserInfo();\n  }, [channelslu]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StudioNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StudioSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Studio analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(StudioAnalytics, \"zM/DNtVjmNHf3Dec60MqYcFRn08=\", true);\n_c = StudioAnalytics;\nvar _c;\n$RefreshReg$(_c, \"StudioAnalytics\");","map":{"version":3,"names":["StudioNav","StudioSidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","StudioAnalytics","userInfo","_s","channelslug","useParams","channelslu","replace","useEffect","fetchUserInfo","response","fetch","method","credentials","status","data","json","setIsLoading","setrequestUserInfo","setVideos","admin_videos","Error","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/babu7/OneDrive/Desktop/djangoyoutube2/reelyoutube/frontend/src/components/studio/StudioAnalytics.js"],"sourcesContent":["import StudioNav from \"./studioComps/StudioNav\";\r\nimport StudioSidebar from \"./studioComps/StudioSidebar\";\r\n\r\nexport default function StudioAnalytics({ userInfo }){\r\n    const { channelslug } = useParams();\r\n    const channelslu = channelslug.replace('@', '');\r\n    useEffect(() => {\r\n        const fetchUserInfo = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:8000/api/user_channel_json/${channelslu}`, {\r\n                    method: 'GET',\r\n                    credentials: 'include',\r\n                });\r\n        \r\n                if (response.status === 200) {\r\n                    const data = await response.json();\r\n                    setIsLoading(false);\r\n                    setrequestUserInfo(data);\r\n                    setVideos(data.admin_videos);\r\n                } else {\r\n                    throw new Error('Failed to fetch user info');\r\n                }\r\n            } catch (error) {\r\n                setIsLoading(true);\r\n                console.error('Error fetching user info:', error);\r\n            }\r\n        };\r\n        \r\n        fetchUserInfo();  \r\n        \r\n              \r\n    }, [channelslu])\r\n    return (\r\n        <>\r\n            <StudioNav />\r\n            <StudioSidebar />\r\n            <label>Studio analytics</label>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,aAAa,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,eAAe,SAASC,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAC;EAAAC,EAAA;EACjD,MAAM;IAAEC;EAAY,CAAC,GAAGC,SAAS,CAAC,CAAC;EACnC,MAAMC,UAAU,GAAGF,WAAW,CAACG,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;EAC/CC,SAAS,CAAC,MAAM;IACZ,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+CAA8CL,UAAW,EAAC,EAAE;UACtFM,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACjB,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;UACzB,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClCC,YAAY,CAAC,KAAK,CAAC;UACnBC,kBAAkB,CAACH,IAAI,CAAC;UACxBI,SAAS,CAACJ,IAAI,CAACK,YAAY,CAAC;QAChC,CAAC,MAAM;UACH,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAChD;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZL,YAAY,CAAC,IAAI,CAAC;QAClBM,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IAEDb,aAAa,CAAC,CAAC;EAGnB,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAChB,oBACIR,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACI1B,OAAA,CAACH,SAAS;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACb9B,OAAA,CAACF,aAAa;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjB9B,OAAA;MAAA0B,QAAA,EAAO;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA,eACjC,CAAC;AAEX;AAACzB,EAAA,CApCuBF,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}