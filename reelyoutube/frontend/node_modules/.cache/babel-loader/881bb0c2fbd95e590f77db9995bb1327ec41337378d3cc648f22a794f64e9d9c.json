{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\babu7\\\\OneDrive\\\\Desktop\\\\React\\\\frontend\\\\src\\\\pages\\\\LazyImage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyImage = ({\n  src,\n  alt\n}) => {\n  _s();\n  const imgRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          imgRef.current.src = src;\n          observer.unobserve(imgRef.current);\n        }\n      });\n    });\n    observer.observe(imgRef.current);\n    return () => {\n      observer.unobserve(imgRef.current);\n    };\n  }, [src]);\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    ref: imgRef,\n    src: \"\",\n    alt: alt\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s(LazyImage, \"yH8mEGw9zDQgg3u40vY4RuXceis=\");\n_c = LazyImage;\nexport default LazyImage;\nvar _c;\n$RefreshReg$(_c, \"LazyImage\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","LazyImage","src","alt","_s","imgRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","unobserve","observe","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/babu7/OneDrive/Desktop/React/frontend/src/pages/LazyImage.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst LazyImage = ({ src, alt }) => {\r\n  const imgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          imgRef.current.src = src;\r\n          observer.unobserve(imgRef.current);\r\n        }\r\n      });\r\n    });\r\n\r\n    observer.observe(imgRef.current);\r\n\r\n    return () => {\r\n      observer.unobserve(imgRef.current);\r\n    };\r\n  }, [src]);\r\n\r\n  return <img ref={imgRef} src=\"\" alt={alt} />;\r\n};\r\n\r\nexport default LazyImage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,GAAG;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MACrDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxBN,MAAM,CAACO,OAAO,CAACV,GAAG,GAAGA,GAAG;UACxBI,QAAQ,CAACO,SAAS,CAACR,MAAM,CAACO,OAAO,CAAC;QACpC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFN,QAAQ,CAACQ,OAAO,CAACT,MAAM,CAACO,OAAO,CAAC;IAEhC,OAAO,MAAM;MACXN,QAAQ,CAACO,SAAS,CAACR,MAAM,CAACO,OAAO,CAAC;IACpC,CAAC;EACH,CAAC,EAAE,CAACV,GAAG,CAAC,CAAC;EAET,oBAAOF,OAAA;IAAKe,GAAG,EAAEV,MAAO;IAACH,GAAG,EAAC,EAAE;IAACC,GAAG,EAAEA;EAAI;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9C,CAAC;AAACf,EAAA,CArBIH,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAuBf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}