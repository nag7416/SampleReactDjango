{"ast":null,"code":"import { useParams } from \"react-router-dom\";\nimport Navbar from \"../Navbar\";\nimport Side from \"../Side\";\nimport Sidebar from \"../Sidebar\";\nimport { useEffect, useState } from \"react\";\nimport AuthorChannelLayer from \"./AuthorChannelLayer\";\nimport AuthorChannelButtons from \"./AuthorChannelButtons\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthorChannelHome({\n  userInfo,\n  authorinfo,\n  authorslug\n}) {\n  // const [authorinfo, setAuthorInfo] = useState([]);\n  // const { authorslug } = useParams();\n\n  // useEffect(() => {\n  //     fetch(`http://localhost:8000/api/${authorslug}`, {\n  //       method: 'GET',\n  //       credentials: 'include',\n  //     })\n  //     .then(response => {\n  //       if (response.status === 200) {\n  //           return response.json();\n  //       } else {\n  //           throw new Error('Failed to fetch user info');\n  //       }\n  //     })\n  //     .then(data => {\n  //         setAuthorInfo(data.author_data[0]);\n  //     })\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"ChannelHome\"\n  }, void 0, false);\n}\n_c = AuthorChannelHome;\nexport default AuthorChannelHome;\nvar _c;\n$RefreshReg$(_c, \"AuthorChannelHome\");","map":{"version":3,"names":["useParams","Navbar","Side","Sidebar","useEffect","useState","AuthorChannelLayer","AuthorChannelButtons","Fragment","_Fragment","jsxDEV","_jsxDEV","AuthorChannelHome","userInfo","authorinfo","authorslug","children","_c","$RefreshReg$"],"sources":["C:/Users/babu7/OneDrive/Desktop/React/frontend/src/components/authorchannel/AuthorChannelHome.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar\";\r\nimport Side from \"../Side\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AuthorChannelLayer from \"./AuthorChannelLayer\";\r\nimport AuthorChannelButtons from \"./AuthorChannelButtons\";\r\n\r\nfunction AuthorChannelHome({ userInfo, authorinfo, authorslug }){\r\n    // const [authorinfo, setAuthorInfo] = useState([]);\r\n    // const { authorslug } = useParams();\r\n\r\n    // useEffect(() => {\r\n    //     fetch(`http://localhost:8000/api/${authorslug}`, {\r\n    //       method: 'GET',\r\n    //       credentials: 'include',\r\n    //     })\r\n    //     .then(response => {\r\n    //       if (response.status === 200) {\r\n    //           return response.json();\r\n    //       } else {\r\n    //           throw new Error('Failed to fetch user info');\r\n    //       }\r\n    //     })\r\n    //     .then(data => {\r\n    //         setAuthorInfo(data.author_data[0]);\r\n    //     })\r\n    // }, [])\r\n\r\n    return (\r\n        <>\r\n            ChannelHome\r\n            {/* <Navbar userInfo={userInfo} />\r\n            <div className=\"main\">\r\n                <Side />\r\n                <Sidebar />\r\n                <div className=\"main-scroll\">\r\n                    <div className=\"channelcon\">\r\n                        <div className=\"banner\" style={{backgroundImage: `url(${authorinfo.channelbanner})`}}>\r\n                            \r\n                        </div>\r\n                        <div className=\"channel-outer\">\r\n                            <AuthorChannelLayer authorinfo={authorinfo} />\r\n                            <AuthorChannelButtons authorslug={authorslug} />\r\n                            <div className=\"channel-inner\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n        </>\r\n    )\r\n}\r\nexport default AuthorChannelHome;"],"mappings":"AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,oBAAoB,MAAM,wBAAwB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,iBAAiBA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC;AAAW,CAAC,EAAC;EAC5D;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIJ,OAAA,CAAAF,SAAA;IAAAO,QAAA,EAAE;EAEE,gBAmBF,CAAC;AAEX;AAACC,EAAA,GA7CQL,iBAAiB;AA8C1B,eAAeA,iBAAiB;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}