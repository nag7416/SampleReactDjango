{"ast":null,"code":"const playPauseBtn = document.querySelector(\".play-pause-btn\");\nconst theaterBtn = document.querySelector(\".theater-btn\");\nconst fullScreenBtn = document.querySelector(\".full-screen-btn\");\nconst miniPlayerBtn = document.querySelector(\".mini-player-btn\");\nconst muteBtn = document.querySelector(\".mute-btn\");\nconst captionsBtn = document.querySelector(\".captions-btn\");\nconst speedBtn = document.querySelector(\".speed-btn\");\nconst currentTimeElem = document.querySelector(\".current-time\");\nconst totalTimeElem = document.querySelector(\".total-time\");\nconst previewImg = document.querySelector(\".preview-img\");\nconst thumbnailImg = document.querySelector(\".thumbnail-img\");\nconst volumeSlider = document.querySelector(\".volume-slider\");\nconst videoContainer = document.querySelector(\".video-container\");\nconst timelineContainer = document.querySelector(\".timeline-container\");\nconst video = document.querySelector(\"video\");\ndocument.addEventListener(\"keydown\", e => {\n  const tagName = document.activeElement.tagName.toLowerCase();\n  if (tagName === \"input\") return;\n  switch (e.key.toLowerCase()) {\n    case \" \":\n      if (tagName === \"button\") return;\n    case \"k\":\n      togglePlay();\n      break;\n    case \"f\":\n      toggleFullScreenMode();\n      break;\n    case \"t\":\n      toggleTheaterMode();\n      break;\n    case \"i\":\n      toggleMiniPlayerMode();\n      break;\n    case \"m\":\n      toggleMute();\n      break;\n    case \"arrowleft\":\n    case \"j\":\n      skip(-5);\n      break;\n    case \"arrowright\":\n    case \"l\":\n      skip(5);\n      break;\n    case \"c\":\n      toggleCaptions();\n      break;\n  }\n});\n\n// Timeline\ntimelineContainer.addEventListener(\"mousemove\", handleTimelineUpdate);\ntimelineContainer.addEventListener(\"mousedown\", toggleScrubbing);\ndocument.addEventListener(\"mouseup\", e => {\n  if (isScrubbing) toggleScrubbing(e);\n});\ndocument.addEventListener(\"mousemove\", e => {\n  if (isScrubbing) handleTimelineUpdate(e);\n});\nlet isScrubbing = false;\nlet wasPaused;\nfunction toggleScrubbing(e) {\n  const rect = timelineContainer.getBoundingClientRect();\n  const percent = Math.min(Math.max(0, e.x - rect.x), rect.width) / rect.width;\n  isScrubbing = (e.buttons & 1) === 1;\n  videoContainer.classList.toggle(\"scrubbing\", isScrubbing);\n  if (isScrubbing) {\n    wasPaused = video.paused;\n    video.pause();\n  } else {\n    video.currentTime = percent * video.duration;\n    if (!wasPaused) video.play();\n  }\n  handleTimelineUpdate(e);\n}\n\n// function handleTimelineUpdate(e) {\n//   const rect = timelineContainer.getBoundingClientRect()\n//   const percent = Math.min(Math.max(0, e.x - rect.x), rect.width) / rect.width\n//   const previewImgNumber = Math.max(\n//     1,\n//     Math.floor((percent * video.duration) / 10)\n//   )\n//   const previewImgSrc = `assets/previewImgs/preview${previewImgNumber}.jpg`\n//   previewImg.src = previewImgSrc\n//   timelineContainer.style.setProperty(\"--preview-position\", percent)\n\n//   if (isScrubbing) {\n//     e.preventDefault()\n//     thumbnailImg.src = previewImgSrc\n//     timelineContainer.style.setProperty(\"--progress-position\", percent)\n//   }\n// }\n\n// Playback Speed\nspeedBtn.addEventListener(\"click\", changePlaybackSpeed);\nfunction changePlaybackSpeed() {\n  let newPlaybackRate = video.playbackRate + 0.25;\n  if (newPlaybackRate > 2) newPlaybackRate = 0.25;\n  video.playbackRate = newPlaybackRate;\n  speedBtn.textContent = `${newPlaybackRate}x`;\n}\n\n// Captions\nconst captions = video.textTracks[0];\ncaptions.mode = \"hidden\";\ncaptionsBtn.addEventListener(\"click\", toggleCaptions);\nfunction toggleCaptions() {\n  const isHidden = captions.mode === \"hidden\";\n  captions.mode = isHidden ? \"showing\" : \"hidden\";\n  videoContainer.classList.toggle(\"captions\", isHidden);\n}\n\n// Duration\nvideo.addEventListener(\"loadeddata\", () => {\n  totalTimeElem.textContent = formatDuration(video.duration);\n});\nvideo.addEventListener(\"timeupdate\", () => {\n  currentTimeElem.textContent = formatDuration(video.currentTime);\n  const percent = video.currentTime / video.duration;\n  timelineContainer.style.setProperty(\"--progress-position\", percent);\n});\nconst leadingZeroFormatter = new Intl.NumberFormat(undefined, {\n  minimumIntegerDigits: 2\n});\nfunction formatDuration(time) {\n  const seconds = Math.floor(time % 60);\n  const minutes = Math.floor(time / 60) % 60;\n  const hours = Math.floor(time / 3600);\n  if (hours === 0) {\n    return `${minutes}:${leadingZeroFormatter.format(seconds)}`;\n  } else {\n    return `${hours}:${leadingZeroFormatter.format(minutes)}:${leadingZeroFormatter.format(seconds)}`;\n  }\n}\nfunction skip(duration) {\n  video.currentTime += duration;\n}\n\n// Volume\nmuteBtn.addEventListener(\"click\", toggleMute);\nvolumeSlider.addEventListener(\"input\", e => {\n  video.volume = e.target.value;\n  video.muted = e.target.value === 0;\n});\nfunction toggleMute() {\n  video.muted = !video.muted;\n}\nvideo.addEventListener(\"volumechange\", () => {\n  volumeSlider.value = video.volume;\n  let volumeLevel;\n  if (video.muted || video.volume === 0) {\n    volumeSlider.value = 0;\n    volumeLevel = \"muted\";\n  } else if (video.volume >= 0.5) {\n    volumeLevel = \"high\";\n  } else {\n    volumeLevel = \"low\";\n  }\n  videoContainer.dataset.volumeLevel = volumeLevel;\n});\n\n// View Modes\ntheaterBtn.addEventListener(\"click\", toggleTheaterMode);\nfullScreenBtn.addEventListener(\"click\", toggleFullScreenMode);\nminiPlayerBtn.addEventListener(\"click\", toggleMiniPlayerMode);\nfunction toggleTheaterMode() {\n  videoContainer.classList.toggle(\"theater\");\n}\nfunction toggleFullScreenMode() {\n  if (document.fullscreenElement == null) {\n    videoContainer.requestFullscreen();\n  } else {\n    document.exitFullscreen();\n  }\n}\nfunction toggleMiniPlayerMode() {\n  if (videoContainer.classList.contains(\"mini-player\")) {\n    document.exitPictureInPicture();\n  } else {\n    video.requestPictureInPicture();\n  }\n}\ndocument.addEventListener(\"fullscreenchange\", () => {\n  videoContainer.classList.toggle(\"full-screen\", document.fullscreenElement);\n});\nvideo.addEventListener(\"enterpictureinpicture\", () => {\n  videoContainer.classList.add(\"mini-player\");\n});\nvideo.addEventListener(\"leavepictureinpicture\", () => {\n  videoContainer.classList.remove(\"mini-player\");\n});\n\n// Play/Pause\nplayPauseBtn.addEventListener(\"click\", togglePlay);\nvideo.addEventListener(\"click\", togglePlay);\nfunction togglePlay() {\n  video.paused ? video.play() : video.pause();\n}\nvideo.addEventListener(\"play\", () => {\n  videoContainer.classList.remove(\"paused\");\n});\nvideo.addEventListener(\"pause\", () => {\n  videoContainer.classList.add(\"paused\");\n});","map":{"version":3,"names":["playPauseBtn","document","querySelector","theaterBtn","fullScreenBtn","miniPlayerBtn","muteBtn","captionsBtn","speedBtn","currentTimeElem","totalTimeElem","previewImg","thumbnailImg","volumeSlider","videoContainer","timelineContainer","video","addEventListener","e","tagName","activeElement","toLowerCase","key","togglePlay","toggleFullScreenMode","toggleTheaterMode","toggleMiniPlayerMode","toggleMute","skip","toggleCaptions","handleTimelineUpdate","toggleScrubbing","isScrubbing","wasPaused","rect","getBoundingClientRect","percent","Math","min","max","x","width","buttons","classList","toggle","paused","pause","currentTime","duration","play","changePlaybackSpeed","newPlaybackRate","playbackRate","textContent","captions","textTracks","mode","isHidden","formatDuration","style","setProperty","leadingZeroFormatter","Intl","NumberFormat","undefined","minimumIntegerDigits","time","seconds","floor","minutes","hours","format","volume","target","value","muted","volumeLevel","dataset","fullscreenElement","requestFullscreen","exitFullscreen","contains","exitPictureInPicture","requestPictureInPicture","add","remove"],"sources":["C:/Users/babu7/OneDrive/Desktop/djangoyoutube2/reelyoutube/frontend/src/player.js"],"sourcesContent":["const playPauseBtn = document.querySelector(\".play-pause-btn\")\r\nconst theaterBtn = document.querySelector(\".theater-btn\")\r\nconst fullScreenBtn = document.querySelector(\".full-screen-btn\")\r\nconst miniPlayerBtn = document.querySelector(\".mini-player-btn\")\r\nconst muteBtn = document.querySelector(\".mute-btn\")\r\nconst captionsBtn = document.querySelector(\".captions-btn\")\r\nconst speedBtn = document.querySelector(\".speed-btn\")\r\nconst currentTimeElem = document.querySelector(\".current-time\")\r\nconst totalTimeElem = document.querySelector(\".total-time\")\r\nconst previewImg = document.querySelector(\".preview-img\")\r\nconst thumbnailImg = document.querySelector(\".thumbnail-img\")\r\nconst volumeSlider = document.querySelector(\".volume-slider\")\r\nconst videoContainer = document.querySelector(\".video-container\")\r\nconst timelineContainer = document.querySelector(\".timeline-container\")\r\nconst video = document.querySelector(\"video\")\r\n\r\ndocument.addEventListener(\"keydown\", e => {\r\n  const tagName = document.activeElement.tagName.toLowerCase()\r\n\r\n  if (tagName === \"input\") return\r\n\r\n  switch (e.key.toLowerCase()) {\r\n    case \" \":\r\n      if (tagName === \"button\") return\r\n    case \"k\":\r\n      togglePlay()\r\n      break\r\n    case \"f\":\r\n      toggleFullScreenMode()\r\n      break\r\n    case \"t\":\r\n      toggleTheaterMode()\r\n      break\r\n    case \"i\":\r\n      toggleMiniPlayerMode()\r\n      break\r\n    case \"m\":\r\n      toggleMute()\r\n      break\r\n    case \"arrowleft\":\r\n    case \"j\":\r\n      skip(-5)\r\n      break\r\n    case \"arrowright\":\r\n    case \"l\":\r\n      skip(5)\r\n      break\r\n    case \"c\":\r\n      toggleCaptions()\r\n      break\r\n  }\r\n})\r\n\r\n// Timeline\r\ntimelineContainer.addEventListener(\"mousemove\", handleTimelineUpdate);\r\ntimelineContainer.addEventListener(\"mousedown\", toggleScrubbing);\r\ndocument.addEventListener(\"mouseup\", e => {\r\n  if (isScrubbing) toggleScrubbing(e)\r\n})\r\ndocument.addEventListener(\"mousemove\", e => {\r\n  if (isScrubbing) handleTimelineUpdate(e)\r\n})\r\n\r\nlet isScrubbing = false\r\nlet wasPaused\r\nfunction toggleScrubbing(e) {\r\n  const rect = timelineContainer.getBoundingClientRect()\r\n  const percent = Math.min(Math.max(0, e.x - rect.x), rect.width) / rect.width\r\n  isScrubbing = (e.buttons & 1) === 1\r\n  videoContainer.classList.toggle(\"scrubbing\", isScrubbing)\r\n  if (isScrubbing) {\r\n    wasPaused = video.paused\r\n    video.pause()\r\n  } else {\r\n    video.currentTime = percent * video.duration\r\n    if (!wasPaused) video.play()\r\n  }\r\n\r\n  handleTimelineUpdate(e)\r\n}\r\n\r\n// function handleTimelineUpdate(e) {\r\n//   const rect = timelineContainer.getBoundingClientRect()\r\n//   const percent = Math.min(Math.max(0, e.x - rect.x), rect.width) / rect.width\r\n//   const previewImgNumber = Math.max(\r\n//     1,\r\n//     Math.floor((percent * video.duration) / 10)\r\n//   )\r\n//   const previewImgSrc = `assets/previewImgs/preview${previewImgNumber}.jpg`\r\n//   previewImg.src = previewImgSrc\r\n//   timelineContainer.style.setProperty(\"--preview-position\", percent)\r\n\r\n//   if (isScrubbing) {\r\n//     e.preventDefault()\r\n//     thumbnailImg.src = previewImgSrc\r\n//     timelineContainer.style.setProperty(\"--progress-position\", percent)\r\n//   }\r\n// }\r\n\r\n// Playback Speed\r\nspeedBtn.addEventListener(\"click\", changePlaybackSpeed)\r\n\r\nfunction changePlaybackSpeed() {\r\n  let newPlaybackRate = video.playbackRate + 0.25\r\n  if (newPlaybackRate > 2) newPlaybackRate = 0.25\r\n  video.playbackRate = newPlaybackRate\r\n  speedBtn.textContent = `${newPlaybackRate}x`\r\n}\r\n\r\n// Captions\r\nconst captions = video.textTracks[0]\r\ncaptions.mode = \"hidden\"\r\n\r\ncaptionsBtn.addEventListener(\"click\", toggleCaptions)\r\n\r\nfunction toggleCaptions() {\r\n  const isHidden = captions.mode === \"hidden\"\r\n  captions.mode = isHidden ? \"showing\" : \"hidden\"\r\n  videoContainer.classList.toggle(\"captions\", isHidden)\r\n}\r\n\r\n// Duration\r\nvideo.addEventListener(\"loadeddata\", () => {\r\n  totalTimeElem.textContent = formatDuration(video.duration)\r\n})\r\n\r\nvideo.addEventListener(\"timeupdate\", () => {\r\n  currentTimeElem.textContent = formatDuration(video.currentTime)\r\n  const percent = video.currentTime / video.duration\r\n  timelineContainer.style.setProperty(\"--progress-position\", percent)\r\n})\r\n\r\nconst leadingZeroFormatter = new Intl.NumberFormat(undefined, {\r\n  minimumIntegerDigits: 2,\r\n})\r\nfunction formatDuration(time) {\r\n  const seconds = Math.floor(time % 60)\r\n  const minutes = Math.floor(time / 60) % 60\r\n  const hours = Math.floor(time / 3600)\r\n  if (hours === 0) {\r\n    return `${minutes}:${leadingZeroFormatter.format(seconds)}`\r\n  } else {\r\n    return `${hours}:${leadingZeroFormatter.format(\r\n      minutes\r\n    )}:${leadingZeroFormatter.format(seconds)}`\r\n  }\r\n}\r\n\r\nfunction skip(duration) {\r\n  video.currentTime += duration\r\n}\r\n\r\n// Volume\r\nmuteBtn.addEventListener(\"click\", toggleMute)\r\nvolumeSlider.addEventListener(\"input\", e => {\r\n  video.volume = e.target.value\r\n  video.muted = e.target.value === 0\r\n})\r\n\r\nfunction toggleMute() {\r\n  video.muted = !video.muted\r\n}\r\n\r\nvideo.addEventListener(\"volumechange\", () => {\r\n  volumeSlider.value = video.volume\r\n  let volumeLevel\r\n  if (video.muted || video.volume === 0) {\r\n    volumeSlider.value = 0\r\n    volumeLevel = \"muted\"\r\n  } else if (video.volume >= 0.5) {\r\n    volumeLevel = \"high\"\r\n  } else {\r\n    volumeLevel = \"low\"\r\n  }\r\n\r\n  videoContainer.dataset.volumeLevel = volumeLevel\r\n})\r\n\r\n// View Modes\r\ntheaterBtn.addEventListener(\"click\", toggleTheaterMode)\r\nfullScreenBtn.addEventListener(\"click\", toggleFullScreenMode)\r\nminiPlayerBtn.addEventListener(\"click\", toggleMiniPlayerMode)\r\n\r\nfunction toggleTheaterMode() {\r\n  videoContainer.classList.toggle(\"theater\")\r\n}\r\n\r\nfunction toggleFullScreenMode() {\r\n  if (document.fullscreenElement == null) {\r\n    videoContainer.requestFullscreen()\r\n  } else {\r\n    document.exitFullscreen()\r\n  }\r\n}\r\n\r\nfunction toggleMiniPlayerMode() {\r\n  if (videoContainer.classList.contains(\"mini-player\")) {\r\n    document.exitPictureInPicture()\r\n  } else {\r\n    video.requestPictureInPicture()\r\n  }\r\n}\r\n\r\ndocument.addEventListener(\"fullscreenchange\", () => {\r\n  videoContainer.classList.toggle(\"full-screen\", document.fullscreenElement)\r\n})\r\n\r\nvideo.addEventListener(\"enterpictureinpicture\", () => {\r\n  videoContainer.classList.add(\"mini-player\")\r\n})\r\n\r\nvideo.addEventListener(\"leavepictureinpicture\", () => {\r\n  videoContainer.classList.remove(\"mini-player\")\r\n})\r\n\r\n// Play/Pause\r\nplayPauseBtn.addEventListener(\"click\", togglePlay)\r\nvideo.addEventListener(\"click\", togglePlay)\r\n\r\nfunction togglePlay() {\r\n  video.paused ? video.play() : video.pause()\r\n}\r\n\r\nvideo.addEventListener(\"play\", () => {\r\n  videoContainer.classList.remove(\"paused\")\r\n})\r\n\r\nvideo.addEventListener(\"pause\", () => {\r\n  videoContainer.classList.add(\"paused\")\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}