{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _textTrackButton = require('./text-track-button.js');\nvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\nvar _component = require('../../component.js');\nvar _component2 = _interopRequireDefault(_component);\nvar _chaptersTrackMenuItem = require('./chapters-track-menu-item.js');\nvar _chaptersTrackMenuItem2 = _interopRequireDefault(_chaptersTrackMenuItem);\nvar _toTitleCase = require('../../utils/to-title-case.js');\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} /**\n   * @file chapters-button.js\n   */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nvar ChaptersButton = function (_TextTrackButton) {\n  _inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    _classCallCheck(this, ChaptersButton);\n    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n    _this.el_.setAttribute('aria-label', 'Chapters Menu');\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize((0, _toTitleCase2['default'])(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n    if (!this.track_) {\n      return items;\n    }\n    var cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new _chaptersTrackMenuItem2['default'](this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n    return items;\n  };\n  return ChaptersButton;\n}(_textTrackButton2['default']);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n_component2['default'].registerComponent('ChaptersButton', ChaptersButton);\nexports['default'] = ChaptersButton;","map":{"version":3,"names":["exports","__esModule","_textTrackButton","require","_textTrackButton2","_interopRequireDefault","_component","_component2","_chaptersTrackMenuItem","_chaptersTrackMenuItem2","_toTitleCase","_toTitleCase2","obj","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","ChaptersButton","_TextTrackButton","player","options","ready","_this","el_","setAttribute","buildCSSClass","update","event","track_","type","setTrack","findChaptersTrack","track","updateHandler_","bind","remoteTextTrackEl","player_","remoteTextTrackEls","getTrackElementByTrack_","removeEventListener","mode","_remoteTextTrackEl","addEventListener","tracks","textTracks","i","length","kind","kind_","getMenuCaption","label","localize","createMenu","options_","title","createItems","items","cues","l","cue","mi","push","controlText_","registerComponent"],"sources":["C:/Users/babu7/OneDrive/Desktop/djangoyoutube2/reelyoutube/frontend/node_modules/videojs-react/node_modules/video.js/es5/control-bar/text-track-controls/chapters-button.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackButton = require('./text-track-button.js');\n\nvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _chaptersTrackMenuItem = require('./chapters-track-menu-item.js');\n\nvar _chaptersTrackMenuItem2 = _interopRequireDefault(_chaptersTrackMenuItem);\n\nvar _toTitleCase = require('../../utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file chapters-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nvar ChaptersButton = function (_TextTrackButton) {\n  _inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    _classCallCheck(this, ChaptersButton);\n\n    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    _this.el_.setAttribute('aria-label', 'Chapters Menu');\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize((0, _toTitleCase2['default'])(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new _chaptersTrackMenuItem2['default'](this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(_textTrackButton2['default']);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\n_component2['default'].registerComponent('ChaptersButton', ChaptersButton);\nexports['default'] = ChaptersButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}